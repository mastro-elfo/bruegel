{"version":3,"sources":["components/GrowTypography.jsx","components/ErrorWrapper.jsx","components/ThemeWrapper.jsx","components/NotifyWrapper.jsx","components/Print.jsx","components/TopFab.jsx","components/Page.jsx","components/home/SuggestionIconButton.jsx","components/home/Header.jsx","components/BoxContainer.jsx","components/home/Image.jsx","components/ConfirmDialog.jsx","components/actions/settings.js","components/home/Intro.jsx","components/home/TextInput.jsx","components/home/Content.jsx","components/home/Drawer.jsx","components/actions/guesses.js","components/actions/answers.js","components/home/View.jsx","components/proverbs/Header.jsx","components/proverbs/Content.jsx","components/proverbs/View.jsx","components/Router.jsx","components/home/Router.jsx","components/proverbs/Router.jsx","App.jsx","serviceWorker.js","index.js"],"names":["GrowTypography","styled","Typography","flexGrow","ErrorWrapper","props","state","error","info","console","this","AppBar","Toolbar","variant","IconButton","color","title","onClick","window","location","reload","Container","gutterBottom","message","component","stack","split","map","line","i","key","children","Component","THEME","createMuiTheme","palette","primary","secondary","ThemeWrapper","theme","notistackRef","createRef","handleDismiss","current","closeSnackbar","ref","maxSnack","anchorOrigin","vertical","horizontal","autoHideDuration","action","useStyles","makeStyles","print","display","noPrint","Print","classes","className","NoPrint","Fab","position","bottom","spacing","right","zIndex","modal","TopFab","threshold","others","trigger","useScrollTrigger","disableHysteresis","Zoom","in","size","event","scrollTo","top","left","behavior","Page","content","drawer","header","topFab","SuggestionIconButton","answers","guesses","useState","show","setShow","filterAnswers","filter","id","includes","useEffect","length","Math","floor","random","meaning","Tooltip","arrow","HomeHeader","onOpen","newGuess","setNewGuess","to","setTimeout","clearTimeout","Badge","badgeContent","BoxContainer","Box","pt","x","y","setPosition","start","setStart","drag","setDrag","handleMouseDown","ev","mouseOrTouch","touches","clientX","clientY","handleMouseMove","min","max","clientWidth","clientHeight","handleMouseUp","style","overflow","backgroundColor","backgroundImage","backgroundPositionX","backgroundPositionY","backgroundRepeat","backgroundSize","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onMouseMove","onTouchMove","ConfirmDialog","confirm","cancel","onConfirm","onCancel","ConfirmButtonProps","CancelButtonProps","other","Dialog","DialogTitle","DialogContent","item","DialogContentText","DialogActions","Button","storage","localStorage","_id","get","parse","v","getItem","set","value","setItem","HomeContent","onSubmit","getSetting","open","setOpen","setSetting","onClose","fontWeight","href","target","Input","transition","InputFocused","TextInput","setValue","useTheme","handleSubmit","px","mx","Grid","container","justify","xs","sm","md","lg","xl","TextField","fullWidth","label","onChange","onKeyPress","InputProps","root","focused","endAdornment","InputAdornment","Image","HomeDrawer","onReset","push","useHistory","intro","setIntro","SwipeableDrawer","List","ListItem","button","ListItemIcon","ListItemText","ListItemSecondaryAction","edge","Switch","checked","JSON","err","stringify","sessionStorage","load","fetch","origin","pathname","join","then","r","json","Promise","resolve","reject","snackbarProps","HomeView","setAnswers","setGuesses","enqueueSnackbar","useSnackbar","loadAnswers","catch","getGuesses","updateGuesses","words","deburr","toLowerCase","replace","index","findIndex","a","match","m","indexOf","every","e","log","ProverbsHeader","loading","visible","onVisibileToggle","goBack","ProverbsContent","render","setRender","rel","alignItems","Array","fill","_","slice","guessed","answer","AnswerCard","proverb","italian","suggestion","setSuggestion","Card","CardHeader","avatar","amber","CardContent","Collapse","SkeletonCard","Skeleton","width","height","ProverbsView","setVisible","setLoading","ROUTES","path","View","route","App","NotifyWrapper","Router","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7d887546.chunk.js","sourcesContent":["// import React, { Component, Fragment } from \"react\";\n\nimport { styled } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst GrowTypography = styled(Typography)({\n  flexGrow: 1\n});\n\nexport default GrowTypography;\n","import React, { Component, Fragment } from \"react\";\n\nimport {\n  AppBar,\n  Container,\n  IconButton,\n  Toolbar,\n  Typography\n} from \"@material-ui/core\";\n\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\n\nimport GrowTypography from \"./GrowTypography\";\n\nexport default class ErrorWrapper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidCatch(error, info) {\n    console.error(\"Console Error\", error, info, this.props);\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { error };\n  }\n\n  render() {\n    const { error } = this.state;\n\n    if (error) {\n      return (\n        <Fragment>\n          <AppBar>\n            <Toolbar>\n              <GrowTypography variant=\"h6\">An error occurred</GrowTypography>\n              <IconButton\n                color=\"inherit\"\n                title=\"Refresh\"\n                onClick={window.location.reload}\n              >\n                <RefreshIcon />\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n          <Toolbar />\n          <Container>\n            <Typography variant=\"h3\" gutterBottom>\n              {error.message}\n            </Typography>\n            <Typography component=\"ul\">\n              {error.stack.split(\"\\n\").map((line, i) => (\n                <Typography key={i} component=\"li\" variant=\"body2\" gutterBottom>\n                  {line}\n                </Typography>\n              ))}\n            </Typography>\n          </Container>\n        </Fragment>\n      );\n    }\n    return this.props.children;\n  }\n}\n","import React from \"react\";\n\n// Customize main theme\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\n// See https://material-ui.com/customization/color/#color for details\nimport primary from \"@material-ui/core/colors/blue\";\nimport secondary from \"@material-ui/core/colors/pink\";\n\n// See https://material-ui.com/customization/theming/#createmuitheme-options-args-theme for details\nconst THEME = createMuiTheme({\n  palette: {\n    primary,\n    secondary\n  }\n});\n\nexport default function ThemeWrapper({ children }) {\n  return <MuiThemeProvider theme={THEME}>{children}</MuiThemeProvider>;\n}\n","import React, { createRef } from \"react\";\n\nimport { SnackbarProvider } from \"notistack\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst notistackRef = createRef();\n\nexport default function({ children }) {\n  const handleDismiss = key => () => notistackRef.current.closeSnackbar(key);\n\n  return (\n    <SnackbarProvider\n      ref={notistackRef}\n      maxSnack={5}\n      anchorOrigin={{\n        vertical: \"top\",\n        horizontal: \"right\"\n      }}\n      autoHideDuration={5000}\n      action={key => (\n        <IconButton\n          color=\"inherit\"\n          title=\"Dismiss\"\n          onClick={handleDismiss(key)}\n        >\n          <CloseIcon />\n        </IconButton>\n      )}\n    >\n      {children}\n    </SnackbarProvider>\n  );\n}\n\n// Use\n// `import {useSnackbar} from 'notistack';`\n// ...\n// This provide `enqueueSnackbar(message, options)` as hook.\n// See also: https://iamhosseindhv.com/notistack\n//\n// Options:\n// \t* `.variant`: oneOf(['default', 'error', 'success', 'warning', 'info'])\n//\n// Pass prop `autoHideDuration`, in milliseconds, to SnackbarProvider. Default is 5000.\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  print: {\n    \"@media screen\": {\n      display: \"none\"\n    }\n  },\n  noPrint: {\n    \"@media print\": {\n      display: \"none\"\n    }\n  }\n});\n\nexport function Print({ children }) {\n  const classes = useStyles();\n  return <div className={classes.print}>{children}</div>;\n}\n\nexport function NoPrint({ children }) {\n  const classes = useStyles();\n  return <div className={classes.noPrint}>{children}</div>;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Fab, useScrollTrigger, Zoom } from \"@material-ui/core\";\n\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\n\nconst useStyles = makeStyles(theme => ({\n  Fab: {\n    position: \"fixed\",\n    bottom: theme.spacing(1),\n    right: theme.spacing(1),\n    zIndex: theme.zIndex.modal\n  }\n}));\n\nexport default function TopFab({ threshold = 100, ...others }) {\n  const classes = useStyles();\n  const trigger = useScrollTrigger({ disableHysteresis: true, threshold });\n\n  const handleClick = event => {\n    window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <Fab\n        color=\"secondary\"\n        size=\"small\"\n        onClick={handleClick}\n        className={classes.Fab}\n        title=\"Move to Top\"\n        {...others}\n      >\n        <KeyboardArrowUpIcon />\n      </Fab>\n    </Zoom>\n  );\n}\n\nTopFab.propTypes = {\n  // Minimum scroll before show the button\n  threshold: PropTypes.number\n};\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Print, NoPrint } from \"./Print\";\nimport TopFab from \"./TopFab\";\n\nexport default function Page({\n  content = null,\n  drawer = null,\n  header = null,\n  print = null,\n  topFab = true\n}) {\n  return (\n    <Fragment>\n      <NoPrint>\n        {topFab && <TopFab />}\n        {!!drawer && drawer}\n        {!!header && header}\n        {!!content && content}\n      </NoPrint>\n      <Print>{!!print && print}</Print>\n    </Fragment>\n  );\n}\n\nPage.propTypes = {\n  topFab: PropTypes.bool,\n  content: PropTypes.element,\n  drawer: PropTypes.element,\n  header: PropTypes.element,\n  print: PropTypes.element\n};\n","import React, { Fragment, useEffect, useState } from \"react\";\n\nimport { IconButton, Tooltip, Typography } from \"@material-ui/core\";\n\nimport LiveHelpIcon from \"@material-ui/icons/LiveHelp\";\n\nexport default function SuggestionIconButton({ answers, guesses }) {\n  const [show, setShow] = useState(false);\n  const filterAnswers = answers.filter(({ id }) => !guesses.includes(id));\n\n  useEffect(() => {\n    if (guesses.includes(show) || (!show && filterAnswers.length > 0)) {\n      // Id already guessed\n      setShow(\n        filterAnswers[Math.floor(Math.random() * filterAnswers.length)].meaning\n      );\n    }\n  }, [guesses, show, filterAnswers]);\n\n  return (\n    <Tooltip\n      arrow\n      title={\n        <Fragment>\n          <Typography>Ti do un suggerimento: </Typography>\n          <Typography variant=\"body2\">\"{show}\"</Typography>\n        </Fragment>\n      }\n    >\n      <IconButton color=\"primary\">\n        <LiveHelpIcon />\n      </IconButton>\n    </Tooltip>\n  );\n}\n","import React, { useEffect, useState, Fragment } from \"react\";\n\nimport {\n  AppBar,\n  Badge,\n  IconButton,\n  Toolbar,\n  Typography\n} from \"@material-ui/core\";\n\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nimport SuggestionIconButton from \"./SuggestionIconButton\";\nimport GrowTypography from \"../GrowTypography\";\n\nexport default function HomeHeader({ onOpen, answers, guesses }) {\n  const [newGuess, setNewGuess] = useState(false);\n\n  useEffect(() => {\n    if (guesses.length > 0) {\n      setNewGuess(true);\n      const to = setTimeout(setNewGuess, 2000, false);\n      return () => clearTimeout(to);\n    }\n  }, [guesses.length]);\n\n  return (\n    <Fragment>\n      <AppBar color=\"transparent\">\n        <Toolbar>\n          <IconButton color=\"primary\" title=\"Open\" onClick={onOpen}>\n            <MenuIcon />\n          </IconButton>\n          <GrowTypography variant=\"h6\" color=\"inherit\"></GrowTypography>\n\n          <SuggestionIconButton answers={answers} guesses={guesses} />\n\n          <Typography color=\"primary\" variant=\"h6\">\n            <Badge badgeContent={newGuess ? \"+1\" : 0} color=\"primary\">\n              {guesses.length}/{answers.length}\n            </Badge>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n    </Fragment>\n  );\n}\n","import React from \"react\";\n\nimport { Box, Container } from \"@material-ui/core\";\n\n/**\n * Puts a `Box` inside a `Container`.\n * Children are rendered inside box and all other props are passed to `Box` element\n * This is useful because you can define a default style for the `Box` element\n * @param       {[type]} children [description]\n * @param       {[type]} props    [description]\n * @constructor\n */\nexport default function BoxContainer({ children, ...props }) {\n  return (\n    <Container>\n      <Box pt={1} {...props}>\n        {children}\n      </Box>\n    </Container>\n  );\n}\n","import React, { createRef, useState } from \"react\";\n\nconst ref = createRef();\n\nexport default function() {\n  const [position, setPosition] = useState({\n    x: 0.5,\n    y: 0.5\n  });\n  const [start, setStart] = useState({\n    x: 0,\n    y: 0\n  });\n  const [drag, setDrag] = useState(null);\n  // const [zoom, setZoom] = useState(1);\n\n  const handleMouseDown = ev => {\n    // console.log(\"onMouseDown\");\n    setStart(position);\n    const mouseOrTouch = ev.touches && ev.touches.length ? ev.touches[0] : ev;\n    setDrag({\n      x: mouseOrTouch.clientX,\n      y: mouseOrTouch.clientY\n    });\n  };\n\n  const handleMouseMove = ev => {\n    if (drag) {\n      const mouseOrTouch = ev.touches && ev.touches.length ? ev.touches[0] : ev;\n\n      setPosition({\n        x: Math.min(\n          1,\n          Math.max(\n            0,\n            start.x - (mouseOrTouch.clientX - drag.x) / ref.current.clientWidth\n          )\n        ),\n        y: Math.min(\n          1,\n          Math.max(\n            0,\n            start.y - (mouseOrTouch.clientY - drag.y) / ref.current.clientHeight\n          )\n        )\n      });\n    }\n  };\n\n  const handleMouseUp = () => {\n    // console.log(\"onMouseUp\");\n    setDrag(null);\n  };\n\n  // const handleWheel = () => {}\n\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        overflow: \"hidden\",\n        backgroundColor: \"#8b6f4f\",\n        backgroundImage:\n          \"url(https://upload.wikimedia.org/wikipedia/commons/7/7e/Pieter_Brueghel_the_Elder_-_The_Dutch_Proverbs_-_Google_Art_Project.jpg), url(https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Pieter_Brueghel_the_Elder_-_The_Dutch_Proverbs_-_Google_Art_Project.jpg/320px-Pieter_Brueghel_the_Elder_-_The_Dutch_Proverbs_-_Google_Art_Project.jpg)\",\n        backgroundPositionX: `${position.x * 100}%`,\n        backgroundPositionY: `${position.y * 100}%`,\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\"\n      }}\n      onMouseDown={handleMouseDown}\n      onTouchStart={handleMouseDown}\n      onMouseUp={handleMouseUp}\n      onTouchEnd={handleMouseUp}\n      onMouseMove={handleMouseMove}\n      onTouchMove={handleMouseMove}\n      ref={ref}\n    ></div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  DialogContent,\n  DialogContentText\n} from \"@material-ui/core\";\n\nexport default function ConfirmDialog({\n  // Content of `DialogTitle`\n  title = \"\",\n  // If array each element is the content of a different `DialogContentText`\n  content = \"\",\n  // Content of confirm button\n  confirm = \"\",\n  // Content of cancel button\n  cancel = \"\",\n  // Confirm callback\n  onConfirm = () => {},\n  // Cancel callback\n  onCancel = () => {},\n  // Buttons props\n  ConfirmButtonProps = {},\n  CancelButtonProps = {},\n  // Other props are passed to `Dialog`\n  ...other\n}) {\n  return (\n    <Dialog {...other}>\n      {!!title && <DialogTitle>{title}</DialogTitle>}\n      {!!content && (\n        <DialogContent>\n          {typeof content === \"object\" && content.map ? (\n            content.map((item, i) => (\n              <DialogContentText key={i}>{item}</DialogContentText>\n            ))\n          ) : (\n            <DialogContentText>{content}</DialogContentText>\n          )}\n        </DialogContent>\n      )}\n      {(!!confirm || !!cancel) && (\n        <DialogActions>\n          {!!confirm && (\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              title=\"Confirm\"\n              onClick={onConfirm}\n              {...ConfirmButtonProps}\n            >\n              {confirm}\n            </Button>\n          )}\n          {!!cancel && (\n            <Button\n              color=\"secondary\"\n              title=\"Cancel\"\n              onClick={onCancel}\n              {...CancelButtonProps}\n            >\n              {cancel}\n            </Button>\n          )}\n        </DialogActions>\n      )}\n    </Dialog>\n  );\n}\n\nConfirmDialog.propTypes = {\n  title: PropTypes.node,\n  content: PropTypes.node,\n  confirm: PropTypes.node,\n  cancel: PropTypes.node,\n  onConfirm: PropTypes.func,\n  onCancel: PropTypes.func,\n  ConfirmButtonProps: PropTypes.object,\n  CancelButtonProps: PropTypes.object\n};\n","const storage = localStorage;\n\nfunction _id(id) {\n  return `set-${id}`;\n}\n\nexport function get(id, parse = v => v) {\n  return parse(storage.getItem(_id(id)));\n}\n\nexport function set(id, value) {\n  storage.setItem(_id(id), value);\n}\n","import React, { Fragment, useEffect, useState } from \"react\";\n\nimport { Box, Button } from \"@material-ui/core\";\n\nimport LiveHelpIcon from \"@material-ui/icons/LiveHelp\";\n\nimport ConfirmDialog from \"../ConfirmDialog\";\n\nimport { get as getSetting, set as setSetting } from \"../actions/settings\";\n\nexport default function HomeContent({ onSubmit = () => {}, answers }) {\n  const [open, setOpen] = useState(getSetting(\"intro\", v => v !== \"false\"));\n\n  useEffect(() => {\n    if (!open) setSetting(\"intro\", false);\n  }, [open]);\n\n  return (\n    <ConfirmDialog\n      open={open}\n      onClose={() => setOpen(false)}\n      confirm=\"Iniziamo\"\n      onConfirm={() => setOpen(false)}\n      ConfirmButtonProps={{ title: \"Clicca per iniziare\" }}\n      content={[\n        <Fragment>\n          <Box component=\"span\" fontWeight=\"fontWeightBold\">\n            Pieter Bruegel\n          </Box>{\" \"}\n          è stato un pittore olandese. È generalmente indicato come il Vecchio\n          per distinguerlo dal figlio primogenito, Pieter Bruegel il Giovane.\n          Anche il secondogenito Jan Bruegel il Vecchio seguì le orme paterne e\n          così pure il nipote Jan Bruegel il Giovane.{\" \"}\n          <Button\n            size=\"small\"\n            href=\"https://it.wikipedia.org/wiki/Pieter_Bruegel_il_Vecchio\"\n            target=\"_blank\"\n          >\n            Leggi l'articolo su Wikipedia\n          </Button>\n        </Fragment>,\n        <Fragment>\n          I{\" \"}\n          <Box component=\"span\" fontWeight=\"fontWeightBold\">\n            Proverbi fiamminghi\n          </Box>{\" \"}\n          è un dipinto a olio su tavola (117x163 cm) di Pieter Bruegel il\n          Vecchio, datato 1559 e conservato nella Gemäldegalerie di Berlino. È\n          firmato in basso a destra \"BRVEGEL 1559\".{\" \"}\n          <Button\n            size=\"small\"\n            href=\"https://it.wikipedia.org/wiki/Proverbi_fiamminghi\"\n            target=\"_blank\"\n          >\n            Leggi l'articolo su Wikipedia\n          </Button>\n        </Fragment>,\n        <Fragment>\n          Lo scopo di questo gioco è di trovare i proverbi nascosti in questo\n          dipinto. Sono risposte valide sia la traduzione in italiano del\n          proverbio originale, sia la versione italiana.\n        </Fragment>,\n        <Fragment>\n          Se ti serve aiuto puoi usare il pulsante <LiveHelpIcon /> per ricevere\n          un suggerimento. Puoi seguire i tuoi progressi in questa{\" \"}\n          <Button href=\"#/proverbs\">pagina</Button>\n        </Fragment>\n      ]}\n    />\n  );\n}\n","import React, { useState } from \"react\";\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport {\n  Box,\n  Grid,\n  IconButton,\n  InputAdornment,\n  TextField\n} from \"@material-ui/core\";\n\nimport SendIcon from \"@material-ui/icons/Send\";\n\nconst useStyles = makeStyles(theme => ({\n  Input: {\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n    transition: \"background-color 0.25s ease\"\n  },\n  InputFocused: { backgroundColor: \"rgba(255, 255, 255, 1)\" }\n}));\n\nexport default function TextInput({ onSubmit = () => {}, answers }) {\n  // TODO: Only once, show a tooltip over the TextField\n\n  const [value, setValue] = useState(\"\");\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const handleKeyPress = ({ key }) => {\n    if (key === \"Enter\") {\n      handleSubmit();\n    }\n  };\n\n  const handleSubmit = () => {\n    onSubmit(value);\n    setValue(\"\");\n  };\n\n  return (\n    <Box\n      position=\"fixed\"\n      bottom={theme.spacing(1)}\n      left={0}\n      right={0}\n      px={1}\n      mx=\"auto\"\n    >\n      <Grid container justify=\"center\">\n        <Grid item xs={12} sm={9} md={6} lg={4} xl={3}>\n          <TextField\n            fullWidth\n            label=\"Proverbio\"\n            variant=\"outlined\"\n            value={value}\n            onChange={({ target: { value } }) => setValue(value)}\n            onKeyPress={handleKeyPress}\n            InputProps={{\n              classes: { root: classes.Input, focused: classes.InputFocused },\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton title=\"Send\" onClick={handleSubmit}>\n                    <SendIcon />\n                  </IconButton>\n                </InputAdornment>\n              )\n            }}\n          />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n","// TODO: Create a logo\n\nimport React from \"react\";\n\nimport BoxContainer from \"../BoxContainer\";\nimport Image from \"./Image\";\nimport Intro from \"./Intro\";\nimport TextInput from \"./TextInput\";\n\nexport default function HomeContent({ onSubmit = () => {}, answers }) {\n  return (\n    <BoxContainer>\n      <Image />\n      <Intro />\n      <TextInput onSubmit={onSubmit} answers={answers} />\n    </BoxContainer>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  // Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListItemSecondaryAction,\n  // ListSubheader,\n  SwipeableDrawer,\n  Switch\n} from \"@material-ui/core\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DoneIcon from \"@material-ui/icons/Done\";\n\nimport { get as getSetting, set as setSetting } from \"../actions/settings\";\n\nexport default function HomeDrawer({\n  open,\n  onClose,\n  onOpen,\n  answers,\n  guesses,\n  onReset\n}) {\n  const { push } = useHistory();\n\n  const [intro, setIntro] = useState(getSetting(\"intro\", v => v !== \"false\"));\n\n  useEffect(() => {\n    // BUG: Need page reload\n    setSetting(\"intro\", intro);\n  }, [intro]);\n\n  return (\n    <SwipeableDrawer open={open} onClose={onClose} onOpen={onOpen}>\n      <List>\n        <ListItem button onClick={() => push(\"/proverbs\")}>\n          <ListItemIcon>\n            <DoneIcon />\n          </ListItemIcon>\n          <ListItemText\n            primary={`${guesses.length}/${answers.length}`}\n            secondary=\"Risposte\"\n          />\n          <ListItemSecondaryAction>\n            <IconButton edge=\"end\" title=\"Cancella progressi\" onClick={onReset}>\n              <DeleteIcon />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n\n        <ListItem>\n          <ListItemIcon>\n            <span>B</span>\n          </ListItemIcon>\n          <ListItemText primary=\"Bruegel\" secondary=\"v1.3.0\" />\n        </ListItem>\n\n        <ListItem button title=\"Toggle\" onClick={() => setIntro(!intro)}>\n          <ListItemIcon>\n            <Switch checked={intro} />\n          </ListItemIcon>\n          <ListItemText\n            primary=\"Introduction\"\n            secondary={intro ? \"Visible\" : \"Hidden\"}\n          />\n        </ListItem>\n      </List>\n    </SwipeableDrawer>\n  );\n}\n","const storage = localStorage;\n\nexport function get() {\n  try {\n    return JSON.parse(storage.getItem(\"guesses\")) || [];\n  } catch (err) {\n    console.error(err);\n    return [];\n  }\n}\n\nexport function set(guesses) {\n  storage.setItem(\"guesses\", JSON.stringify(guesses));\n}\n\nexport function reset() {\n  set([]);\n}\n","const storage = sessionStorage;\n\nexport function load() {\n  const item = storage.getItem(\"answers\");\n  if (item === null) {\n    return fetch(\n      [\n        window.location.origin,\n        window.location.pathname.split(\"/\")[1],\n        \"\",\n        \"answers.json\"\n      ].join(\"/\")\n    )\n      .then(r => r.json())\n      .then(r => {\n        storage.setItem(\"answers\", JSON.stringify(r));\n        return r;\n      });\n  }\n  try {\n    return Promise.resolve(JSON.parse(item));\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport { useSnackbar } from \"notistack\";\nimport { deburr } from \"lodash\";\n\nimport Page from \"../Page\";\nimport Header from \"./Header\";\nimport Content from \"./Content\";\nimport Drawer from \"./Drawer\";\n\nimport { get as getGuesses, set as updateGuesses } from \"../actions/guesses\";\nimport { load as loadAnswers } from \"../actions/answers\";\n\nconst snackbarProps = {\n  anchorOrigin: {\n    horizontal: \"center\",\n    vertical: \"top\"\n  },\n  autoHideDuration: 2000\n};\n\nexport default function HomeView() {\n  const [open, setOpen] = useState(false);\n  const [answers, setAnswers] = useState([]);\n  const [guesses, setGuesses] = useState([]);\n  const { enqueueSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    loadAnswers()\n      .then(answers => setAnswers(answers))\n      .catch(err => {\n        console.error(err);\n        enqueueSnackbar(err.message, { variant: \"error\" });\n      });\n  }, [enqueueSnackbar]);\n\n  useEffect(() => {\n    setGuesses(getGuesses());\n  }, []);\n\n  useEffect(() => {\n    updateGuesses(guesses);\n  }, [guesses, guesses.length]);\n\n  const handleSubmit = value => {\n    const words = deburr(value)\n      .toLowerCase()\n      .replace(/[^\\w]+/g, \" \")\n      .replace(/\\s\\s+/g, \" \")\n      .split(\" \");\n    const index = answers.findIndex(\n      a =>\n        a.match.findIndex(match =>\n          match\n            .map(m => words.indexOf(m))\n            .every((e, i, a) => (i > 0 ? e > a[i - 1] : a[i] !== -1))\n        ) !== -1\n    );\n    if (index !== -1) {\n      // Guessed right\n      if (guesses.includes(answers[index].id)) {\n        // already guessed\n        enqueueSnackbar(\"Già trovato\", { variant: \"info\", ...snackbarProps });\n        console.log(answers[index].id, guesses);\n      } else {\n        // Success\n        enqueueSnackbar(\"Corretto!\", {\n          variant: \"success\",\n          ...snackbarProps\n        });\n        // TODO: Add a sound?\n        setGuesses([...guesses, answers[index].id]);\n      }\n    } else {\n      // Wrong\n      enqueueSnackbar(\"Sbagliato\", {\n        variant: \"error\",\n        ...snackbarProps\n      });\n    }\n  };\n\n  const handleReset = () => {\n    setGuesses([]);\n    enqueueSnackbar(\"Tutti i progressi sono stati cancellati\", {\n      variant: \"info\",\n      ...snackbarProps\n    });\n  };\n\n  return (\n    <Page\n      header={\n        <Header\n          onOpen={() => setOpen(true)}\n          answers={answers}\n          guesses={guesses}\n        />\n      }\n      content={\n        <Content answers={answers} guesses={guesses} onSubmit={handleSubmit} />\n      }\n      drawer={\n        <Drawer\n          open={open}\n          onClose={() => setOpen(false)}\n          onOpen={() => setOpen(true)}\n          answers={answers}\n          guesses={guesses}\n          onReset={handleReset}\n        />\n      }\n    />\n  );\n}\n","import React, { Fragment } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport { AppBar, Toolbar, IconButton } from \"@material-ui/core\";\n\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\n\nimport GrowTypography from \"../GrowTypography\";\n\nexport default function ProverbsHeader({\n  answers,\n  loading,\n  visible = false,\n  onVisibileToggle = () => {}\n}) {\n  const { goBack } = useHistory();\n  return (\n    <Fragment>\n      <AppBar>\n        <Toolbar>\n          <IconButton color=\"inherit\" title=\"Go Back\" onClick={() => goBack()}>\n            <ArrowBackIcon />\n          </IconButton>\n          <GrowTypography variant=\"h6\" color=\"inherit\">\n            {loading ? \"…\" : answers.length} Proverbi\n          </GrowTypography>\n          <IconButton\n            color=\"inherit\"\n            title={visible ? \"Nascondi\" : \"Mostra\"}\n            onClick={onVisibileToggle}\n          >\n            {visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n    </Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Collapse,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography\n} from \"@material-ui/core\";\n\nimport { Skeleton } from \"@material-ui/lab\";\n\nimport BlockIcon from \"@material-ui/icons/Block\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport amber from \"@material-ui/core/colors/amber\";\n\nimport BoxContainer from \"../BoxContainer\";\n\nexport default function ProverbsContent({\n  answers,\n  guesses,\n  loading,\n  visible = false\n}) {\n  const [render, setRender] = useState(10);\n\n  useEffect(() => {\n    if (render < answers.length) {\n      const to = setTimeout(\n        setRender,\n        50,\n        Math.min(answers.length, render + 10)\n      );\n      return () => clearTimeout(to);\n    }\n  }, [render, answers.length]);\n\n  return (\n    <BoxContainer>\n      <Typography gutterBottom>\n        Tutti i testi sono tratti dalla pagina Wikipedia sul dipinto:{\" \"}\n        <a\n          href=\"https://it.wikipedia.org/wiki/Proverbi_fiamminghi\"\n          title=\"Apri Wikipedia\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Proverbi Fiamminghi (Pieter Bruegel il Vecchio)\n        </a>\n      </Typography>\n      <Grid container alignItems=\"center\" justify=\"space-evenly\" spacing={1}>\n        {loading &&\n          Array(20)\n            .fill(true)\n            .map((_, i) => <SkeletonCard key={i} />)}\n\n        {answers.slice(0, render).map(a => {\n          const guessed = guesses.includes(a.id);\n          return (\n            <AnswerCard\n              key={a.id}\n              answer={a}\n              guessed={guessed}\n              visible={visible || guessed}\n            />\n          );\n        })}\n      </Grid>\n    </BoxContainer>\n  );\n}\n\nconst AnswerCard = ({\n  answer: { id, proverb, meaning, italian },\n  guessed,\n  visible\n}) => {\n  const [suggestion, setSuggestion] = useState(false);\n\n  return (\n    <Grid item xs={12} sm={9} md={6}>\n      <Card variant=\"outlined\">\n        <CardHeader\n          action={\n            !guessed &&\n            !!meaning && (\n              <IconButton\n                title=\"Ottieni un suggerimento\"\n                color=\"inherit\"\n                onClick={() => setSuggestion(!suggestion)}\n              >\n                <SearchIcon />\n              </IconButton>\n            )\n          }\n          avatar={\n            guessed ? (\n              <DoneIcon color=\"primary\" />\n            ) : (\n              <BlockIcon style={{ color: amber[500] }} />\n            )\n          }\n          title={`#${id}`}\n        />\n        <CardContent>\n          <Collapse in={visible}>\n            <Typography variant=\"h6\">{proverb}</Typography>\n            <Typography color=\"textSecondary\">{italian}</Typography>\n          </Collapse>\n          <Collapse in={suggestion || guessed}>\n            <List>\n              <ListItem>\n                <ListItemIcon>\n                  <SearchIcon />\n                </ListItemIcon>\n                <ListItemText primary={meaning} />\n              </ListItem>\n            </List>\n          </Collapse>\n        </CardContent>\n      </Card>{\" \"}\n    </Grid>\n  );\n};\n\nconst SkeletonCard = () => (\n  <Grid item xs={12} sm={9} md={6}>\n    <Card variant=\"outlined\">\n      <CardHeader\n        avatar={<Skeleton variant=\"circle\" width={24} height={24} />}\n        title={<Skeleton variant=\"text\" />}\n      />\n      <CardContent>\n        <Typography variant=\"h6\">\n          <Skeleton variant=\"text\" />\n        </Typography>\n        <Typography color=\"textSecondary\">\n          <Skeleton variant=\"text\" />\n        </Typography>\n        <List>\n          <ListItem>\n            <ListItemIcon>\n              <Skeleton variant=\"circle\" width={24} height={24} />\n            </ListItemIcon>\n            <ListItemText primary={<Skeleton variant=\"text\" />} />\n          </ListItem>\n        </List>\n      </CardContent>\n    </Card>\n  </Grid>\n);\n","import React, { useEffect, useState } from \"react\";\n\nimport { useSnackbar } from \"notistack\";\n\nimport Page from \"../Page\";\nimport Header from \"./Header\";\nimport Content from \"./Content\";\n\nimport { get as getGuesses } from \"../actions/guesses\";\nimport { load as loadAnswers } from \"../actions/answers\";\n\nexport default function ProverbsView() {\n  const [answers, setAnswers] = useState([]);\n  const [guesses, setGuesses] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const { enqueueSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    loadAnswers()\n      .then(answers => setAnswers(answers))\n      .catch(err => {\n        console.error(err);\n        enqueueSnackbar(err.message, { variant: \"error\" });\n      })\n      .then(() => setLoading(false));\n  }, [enqueueSnackbar]);\n\n  useEffect(() => {\n    setGuesses(getGuesses());\n  }, []);\n\n  const handleVisibileToggle = () => setVisible(!visible);\n\n  return (\n    <Page\n      header={\n        <Header\n          answers={answers}\n          guesses={guesses}\n          loading={loading}\n          visible={visible}\n          onVisibileToggle={handleVisibileToggle}\n        />\n      }\n      content={\n        <Content\n          answers={answers}\n          guesses={guesses}\n          loading={loading}\n          visible={visible}\n        />\n      }\n    />\n  );\n}\n","import React from \"react\";\n\nimport {\n  // See https://reacttraining.com/react-router/web/guides/quick-start for details\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\nimport Home from \"./home/Router\";\nimport Proverbs from \"./proverbs/Router\";\n\nconst ROUTES = [\n  // {path: '', component: RouterComponent, [exact]}\n  { path: \"/home\", component: Home },\n  { path: \"/proverbs\", component: Proverbs }\n];\n\nexport default function(props) {\n  return (\n    <Router>\n      <Switch>\n        {ROUTES.map((route, i) => (\n          <Route key={i} {...route} />\n        ))}\n        <Redirect to=\"/home\" />\n      </Switch>\n    </Router>\n  );\n}\n","import React from \"react\";\n\nimport { Route, Switch } from \"react-router-dom\";\n\nimport View from \"./View\";\n\nexport default function HomeRouter() {\n  return (\n    <Switch>\n      <Route path=\"/home\" component={View} />\n    </Switch>\n  );\n}\n","import React from \"react\";\n\nimport { Route, Switch } from \"react-router-dom\";\n\nimport View from \"./View\";\n\nexport default function ProverbsRouter() {\n  return (\n    <Switch>\n      <Route path=\"/proverbs\" component={View} />\n    </Switch>\n  );\n}\n","import React from \"react\";\n\nimport ErrorWrapper from \"./components/ErrorWrapper\";\nimport ThemeWrapper from \"./components/ThemeWrapper\";\nimport NotifyWrapper from \"./components/NotifyWrapper\";\n\nimport Router from \"./components/Router\";\n\nexport default function App() {\n  return (\n    <ThemeWrapper>\n      <ErrorWrapper>\n        <NotifyWrapper>\n          <Router />\n        </NotifyWrapper>\n      </ErrorWrapper>\n    </ThemeWrapper>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}