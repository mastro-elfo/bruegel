{"version":3,"sources":["components/GrowTypography.jsx","components/ErrorWrapper.jsx","components/ThemeWrapper.jsx","components/NotifyWrapper.jsx","components/Print.jsx","components/TopFab.jsx","components/Page.jsx","components/home/Header.jsx","components/BoxContainer.jsx","components/home/Image.jsx","components/home/TextInput.jsx","components/home/Content.jsx","components/home/Drawer.jsx","components/actions/guesses.js","components/actions/answers.js","components/home/View.jsx","components/proverbs/Header.jsx","components/proverbs/Content.jsx","components/proverbs/View.jsx","components/Router.jsx","components/home/Router.jsx","components/proverbs/Router.jsx","App.jsx","serviceWorker.js","index.js"],"names":["GrowTypography","styled","Typography","flexGrow","ErrorWrapper","props","state","error","info","console","this","AppBar","Toolbar","variant","IconButton","color","title","onClick","window","location","reload","Container","gutterBottom","message","component","stack","split","map","line","i","key","children","Component","THEME","createMuiTheme","palette","primary","secondary","ThemeWrapper","theme","notistackRef","createRef","handleDismiss","current","closeSnackbar","ref","maxSnack","anchorOrigin","vertical","horizontal","autoHideDuration","action","useStyles","makeStyles","print","display","noPrint","Print","classes","className","NoPrint","Fab","position","bottom","spacing","right","zIndex","modal","TopFab","threshold","others","trigger","useScrollTrigger","disableHysteresis","Zoom","in","size","event","scrollTo","top","left","behavior","Page","content","drawer","header","topFab","HomeHeader","onOpen","answers","guesses","useState","newGuess","setNewGuess","useEffect","length","to","setTimeout","clearTimeout","Box","bgcolor","fontSize","borderRadius","px","Badge","badgeContent","BoxContainer","pt","x","y","setPosition","start","setStart","drag","setDrag","handleMouseDown","ev","mouseOrTouch","touches","clientX","clientY","handleMouseMove","Math","min","max","clientWidth","clientHeight","handleMouseUp","style","overflow","backgroundColor","backgroundImage","backgroundPositionX","backgroundPositionY","backgroundRepeat","backgroundSize","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onMouseMove","onTouchMove","Input","transition","InputFocused","TextInput","onSubmit","value","setValue","useTheme","handleSubmit","mx","Grid","container","justify","item","xs","sm","md","lg","xl","TextField","fullWidth","label","onChange","target","onKeyPress","InputProps","root","focused","HomeContent","Image","HomeDrawer","open","onClose","onReset","push","useHistory","SwipeableDrawer","List","ListItem","button","ListItemIcon","ListItemText","ListItemSecondaryAction","edge","storage","localStorage","get","JSON","parse","getItem","err","set","setItem","stringify","sessionStorage","load","fetch","then","r","json","Promise","resolve","reject","snackbarProps","HomeView","setOpen","setAnswers","setGuesses","enqueueSnackbar","useSnackbar","loadAnswers","catch","getGuesses","updateGuesses","words","deburr","toLowerCase","replace","index","findIndex","a","match","m","indexOf","every","e","includes","id","log","ProverbsHeader","loading","visible","onVisibileToggle","goBack","ProverbsContent","render","setRender","href","rel","alignItems","Array","fill","_","slice","guessed","answer","AnswerCard","proverb","meaning","italian","suggestion","setSuggestion","Card","CardHeader","avatar","amber","CardContent","Collapse","SkeletonCard","Skeleton","width","height","ProverbsView","setVisible","setLoading","ROUTES","path","View","basename","route","App","NotifyWrapper","Router","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3b5159d1.chunk.js","sourcesContent":["// import React, { Component, Fragment } from \"react\";\n\nimport { styled } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst GrowTypography = styled(Typography)({\n  flexGrow: 1\n});\n\nexport default GrowTypography;\n","import React, { Component, Fragment } from \"react\";\n\nimport {\n  AppBar,\n  Container,\n  IconButton,\n  Toolbar,\n  Typography\n} from \"@material-ui/core\";\n\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\n\nimport GrowTypography from \"./GrowTypography\";\n\nexport default class ErrorWrapper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidCatch(error, info) {\n    console.error(\"Console Error\", error, info, this.props);\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { error };\n  }\n\n  render() {\n    const { error } = this.state;\n\n    if (error) {\n      return (\n        <Fragment>\n          <AppBar>\n            <Toolbar>\n              <GrowTypography variant=\"h6\">An error occurred</GrowTypography>\n              <IconButton\n                color=\"inherit\"\n                title=\"Refresh\"\n                onClick={window.location.reload}\n              >\n                <RefreshIcon />\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n          <Toolbar />\n          <Container>\n            <Typography variant=\"h3\" gutterBottom>\n              {error.message}\n            </Typography>\n            <Typography component=\"ul\">\n              {error.stack.split(\"\\n\").map((line, i) => (\n                <Typography key={i} component=\"li\" variant=\"body2\" gutterBottom>\n                  {line}\n                </Typography>\n              ))}\n            </Typography>\n          </Container>\n        </Fragment>\n      );\n    }\n    return this.props.children;\n  }\n}\n","import React from \"react\";\n\n// Customize main theme\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\n// See https://material-ui.com/customization/color/#color for details\nimport primary from \"@material-ui/core/colors/blue\";\nimport secondary from \"@material-ui/core/colors/pink\";\n\n// See https://material-ui.com/customization/theming/#createmuitheme-options-args-theme for details\nconst THEME = createMuiTheme({\n  palette: {\n    primary,\n    secondary\n  }\n});\n\nexport default function ThemeWrapper({ children }) {\n  return <MuiThemeProvider theme={THEME}>{children}</MuiThemeProvider>;\n}\n","import React, { createRef } from \"react\";\n\nimport { SnackbarProvider } from \"notistack\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst notistackRef = createRef();\n\nexport default function({ children }) {\n  const handleDismiss = key => () => notistackRef.current.closeSnackbar(key);\n\n  return (\n    <SnackbarProvider\n      ref={notistackRef}\n      maxSnack={5}\n      anchorOrigin={{\n        vertical: \"top\",\n        horizontal: \"right\"\n      }}\n      autoHideDuration={5000}\n      action={key => (\n        <IconButton\n          color=\"inherit\"\n          title=\"Dismiss\"\n          onClick={handleDismiss(key)}\n        >\n          <CloseIcon />\n        </IconButton>\n      )}\n    >\n      {children}\n    </SnackbarProvider>\n  );\n}\n\n// Use\n// `import {useSnackbar} from 'notistack';`\n// ...\n// This provide `enqueueSnackbar(message, options)` as hook.\n// See also: https://iamhosseindhv.com/notistack\n//\n// Options:\n// \t* `.variant`: oneOf(['default', 'error', 'success', 'warning', 'info'])\n//\n// Pass prop `autoHideDuration`, in milliseconds, to SnackbarProvider. Default is 5000.\n","import React from \"react\";\n\n// TODO: Check this: https://material-ui.com/system/display/#display-in-print\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  print: {\n    \"@media screen\": {\n      display: \"none\"\n    }\n  },\n  noPrint: {\n    \"@media print\": {\n      display: \"none\"\n    }\n  }\n});\n\nexport function Print({ children }) {\n  const classes = useStyles();\n  return <div className={classes.print}>{children}</div>;\n}\n\nexport function NoPrint({ children }) {\n  const classes = useStyles();\n  return <div className={classes.noPrint}>{children}</div>;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Fab, useScrollTrigger, Zoom } from \"@material-ui/core\";\n\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\n\nconst useStyles = makeStyles(theme => ({\n  Fab: {\n    position: \"fixed\",\n    bottom: theme.spacing(1),\n    right: theme.spacing(1),\n    zIndex: theme.zIndex.modal\n  }\n}));\n\nexport default function TopFab({ threshold = 100, ...others }) {\n  const classes = useStyles();\n  const trigger = useScrollTrigger({ disableHysteresis: true, threshold });\n\n  const handleClick = event => {\n    window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <Fab\n        color=\"secondary\"\n        size=\"small\"\n        onClick={handleClick}\n        className={classes.Fab}\n        title=\"Move to Top\"\n        {...others}\n      >\n        <KeyboardArrowUpIcon />\n      </Fab>\n    </Zoom>\n  );\n}\n\nTopFab.propTypes = {\n  // Minimum scroll before show the button\n  threshold: PropTypes.number\n};\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Print, NoPrint } from \"./Print\";\nimport TopFab from \"./TopFab\";\n\nexport default function Page({\n  content = null,\n  drawer = null,\n  header = null,\n  print = null,\n  topFab = true\n}) {\n  return (\n    <Fragment>\n      <NoPrint>\n        {topFab && <TopFab />}\n        {!!drawer && drawer}\n        {!!header && header}\n        {!!content && content}\n      </NoPrint>\n      <Print>{!!print && print}</Print>\n    </Fragment>\n  );\n}\n\nPage.propTypes = {\n  topFab: PropTypes.bool,\n  content: PropTypes.element,\n  drawer: PropTypes.element,\n  header: PropTypes.element,\n  print: PropTypes.element\n};\n","import React, { useEffect, useState, Fragment } from \"react\";\n\nimport { AppBar, Badge, Box, IconButton, Toolbar } from \"@material-ui/core\";\n\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nimport GrowTypography from \"../GrowTypography\";\n\nexport default function HomeHeader({ onOpen, answers, guesses }) {\n  const [newGuess, setNewGuess] = useState(false);\n\n  useEffect(() => {\n    if (guesses.length > 0) {\n      setNewGuess(true);\n      const to = setTimeout(setNewGuess, 2000, false);\n      return () => clearTimeout(to);\n    }\n  }, [guesses.length]);\n\n  return (\n    <Fragment>\n      <AppBar color=\"transparent\">\n        <Toolbar>\n          <IconButton color=\"primary\" title=\"Open\" onClick={onOpen}>\n            <MenuIcon />\n          </IconButton>\n          <GrowTypography variant=\"h6\" color=\"inherit\"></GrowTypography>\n\n          <Box\n            bgcolor=\"rgba(255,255,255,0.5)\"\n            color=\"primary.main\"\n            fontSize=\"h6.fontSize\"\n            borderRadius=\"borderRadius\"\n            px={0.5}\n          >\n            <Badge badgeContent={newGuess ? \"+1\" : 0} color=\"primary\">\n              {guesses.length}/{answers.length}\n            </Badge>\n          </Box>\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n    </Fragment>\n  );\n}\n","import React from \"react\";\n\nimport { Box, Container } from \"@material-ui/core\";\n\n/**\n * Puts a `Box` inside a `Container`.\n * Children are rendered inside box and all other props are passed to `Box` element\n * This is useful because you can define a default style for the `Box` element\n * @param       {[type]} children [description]\n * @param       {[type]} props    [description]\n * @constructor\n */\nexport default function BoxContainer({ children, ...props }) {\n  return (\n    <Container>\n      <Box pt={1} {...props}>\n        {children}\n      </Box>\n    </Container>\n  );\n}\n","import React, { createRef, useState } from \"react\";\n\nconst ref = createRef();\n\nexport default function() {\n  const [position, setPosition] = useState({\n    x: 0.5,\n    y: 0.5\n  });\n  const [start, setStart] = useState({\n    x: 0,\n    y: 0\n  });\n  const [drag, setDrag] = useState(null);\n  // const [zoom, setZoom] = useState(1);\n\n  const handleMouseDown = ev => {\n    // console.log(\"onMouseDown\");\n    setStart(position);\n    const mouseOrTouch = ev.touches && ev.touches.length ? ev.touches[0] : ev;\n    setDrag({\n      x: mouseOrTouch.clientX,\n      y: mouseOrTouch.clientY\n    });\n  };\n\n  const handleMouseMove = ev => {\n    if (drag) {\n      const mouseOrTouch = ev.touches && ev.touches.length ? ev.touches[0] : ev;\n\n      setPosition({\n        x: Math.min(\n          1,\n          Math.max(\n            0,\n            start.x - (mouseOrTouch.clientX - drag.x) / ref.current.clientWidth\n          )\n        ),\n        y: Math.min(\n          1,\n          Math.max(\n            0,\n            start.y - (mouseOrTouch.clientY - drag.y) / ref.current.clientHeight\n          )\n        )\n      });\n    }\n  };\n\n  const handleMouseUp = () => {\n    // console.log(\"onMouseUp\");\n    setDrag(null);\n  };\n\n  // const handleWheel = () => {}\n\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        overflow: \"hidden\",\n        backgroundColor: \"#8b6f4f\",\n        backgroundImage: \"url(Image.jpg), url(Image250.jpg)\",\n        backgroundPositionX: `${position.x * 100}%`,\n        backgroundPositionY: `${position.y * 100}%`,\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\"\n      }}\n      onMouseDown={handleMouseDown}\n      onTouchStart={handleMouseDown}\n      onMouseUp={handleMouseUp}\n      onTouchEnd={handleMouseUp}\n      onMouseMove={handleMouseMove}\n      onTouchMove={handleMouseMove}\n      ref={ref}\n    ></div>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { Box, Grid, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  Input: {\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n    transition: \"background-color 0.25s ease\"\n  },\n  InputFocused: { backgroundColor: \"rgba(255, 255, 255, 1)\" }\n}));\n\nexport default function TextInput({ onSubmit = () => {}, answers }) {\n  const [value, setValue] = useState(\"\");\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const handleKeyPress = ({ key }) => {\n    if (key === \"Enter\") {\n      handleSubmit();\n    }\n  };\n\n  const handleSubmit = () => {\n    onSubmit(value);\n    setValue(\"\");\n  };\n\n  return (\n    <Box\n      position=\"fixed\"\n      bottom={theme.spacing(1)}\n      left={0}\n      right={0}\n      px={1}\n      mx=\"auto\"\n    >\n      <Grid container justify=\"center\">\n        <Grid item xs={12} sm={9} md={6} lg={4} xl={3}>\n          <TextField\n            fullWidth\n            label=\"Proverbio\"\n            variant=\"outlined\"\n            value={value}\n            onChange={({ target: { value } }) => setValue(value)}\n            onKeyPress={handleKeyPress}\n            InputProps={{\n              classes: { root: classes.Input, focused: classes.InputFocused }\n            }}\n          />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n","import React from \"react\";\n\nimport BoxContainer from \"../BoxContainer\";\nimport Image from \"./Image\";\nimport TextInput from \"./TextInput\";\n\nexport default function HomeContent({ onSubmit = () => {}, answers }) {\n  return (\n    <BoxContainer>\n      <Image />\n      <TextInput onSubmit={onSubmit} answers={answers} />\n    </BoxContainer>\n  );\n}\n","import React from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  // Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListItemSecondaryAction,\n  // ListSubheader,\n  SwipeableDrawer\n} from \"@material-ui/core\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DoneIcon from \"@material-ui/icons/Done\";\n\nexport default function HomeDrawer({\n  open,\n  onClose,\n  onOpen,\n  answers,\n  guesses,\n  onReset\n}) {\n  const { push } = useHistory();\n\n  return (\n    <SwipeableDrawer open={open} onClose={onClose} onOpen={onOpen}>\n      <List>\n        <ListItem button onClick={() => push(\"/proverbs\")}>\n          <ListItemIcon>\n            <DoneIcon />\n          </ListItemIcon>\n          <ListItemText\n            primary={`${guesses.length}/${answers.length}`}\n            secondary=\"Risposte\"\n          />\n          <ListItemSecondaryAction>\n            <IconButton edge=\"end\" title=\"Cancella progressi\" onClick={onReset}>\n              <DeleteIcon />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n        <ListItem>\n          <ListItemIcon>\n            <span>B</span>\n          </ListItemIcon>\n          <ListItemText primary=\"Bruegel\" secondary=\"v0.1.0\" />\n        </ListItem>\n      </List>\n    </SwipeableDrawer>\n  );\n}\n","const storage = localStorage;\n\nexport function get() {\n  try {\n    return JSON.parse(storage.getItem(\"guesses\")) || [];\n  } catch (err) {\n    console.error(err);\n    return [];\n  }\n}\n\nexport function set(guesses) {\n  storage.setItem(\"guesses\", JSON.stringify(guesses));\n}\n\nexport function reset() {\n  set([]);\n}\n","const storage = sessionStorage;\n\nexport function load() {\n  const item = storage.getItem(\"answers\");\n  if (item === null) {\n    return fetch(\"answers.json\")\n      .then(r => r.json())\n      .then(r => {\n        storage.setItem(\"answers\", JSON.stringify(r));\n        return r;\n      });\n  }\n  try {\n    return Promise.resolve(JSON.parse(item));\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport { useSnackbar } from \"notistack\";\nimport { deburr } from \"lodash\";\n\nimport Page from \"../Page\";\nimport Header from \"./Header\";\nimport Content from \"./Content\";\nimport Drawer from \"./Drawer\";\n\nimport { get as getGuesses, set as updateGuesses } from \"../actions/guesses\";\nimport { load as loadAnswers } from \"../actions/answers\";\n\nconst snackbarProps = {\n  anchorOrigin: {\n    horizontal: \"center\",\n    vertical: \"top\"\n  },\n  autoHideDuration: 2000\n};\n\nexport default function HomeView() {\n  const [open, setOpen] = useState(false);\n  const [answers, setAnswers] = useState([]);\n  const [guesses, setGuesses] = useState([]);\n  const { enqueueSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    loadAnswers()\n      .then(answers => setAnswers(answers))\n      .catch(err => {\n        console.error(err);\n        enqueueSnackbar(err.message, { variant: \"error\" });\n      });\n  }, [enqueueSnackbar]);\n\n  useEffect(() => {\n    setGuesses(getGuesses());\n  }, []);\n\n  useEffect(() => {\n    updateGuesses(guesses);\n  }, [guesses, guesses.length]);\n\n  const handleSubmit = value => {\n    const words = deburr(value)\n      .toLowerCase()\n      .replace(/[^\\w]+/g, \" \")\n      .replace(/\\s\\s+/g, \" \")\n      .split(\" \");\n    const index = answers.findIndex(\n      a =>\n        a.match.findIndex(match =>\n          match\n            .map(m => words.indexOf(m))\n            .every((e, i, a) => (i > 0 ? e > a[i - 1] : a[i] !== -1))\n        ) !== -1\n    );\n    if (index !== -1) {\n      // Guessed right\n      if (guesses.includes(answers[index].id)) {\n        // already guessed\n        enqueueSnackbar(\"Già trovato\", { variant: \"info\", ...snackbarProps });\n        console.log(answers[index].id, guesses);\n      } else {\n        enqueueSnackbar(\"Corretto!\", {\n          variant: \"success\",\n          ...snackbarProps\n        });\n        setGuesses([...guesses, answers[index].id]);\n      }\n    } else {\n      // Wrong\n      enqueueSnackbar(\"Sbagliato\", {\n        variant: \"error\",\n        ...snackbarProps\n      });\n    }\n  };\n\n  const handleReset = () => {\n    setGuesses([]);\n    enqueueSnackbar(\"Tutti i progressi sono stati cancellati\", {\n      variant: \"info\",\n      ...snackbarProps\n    });\n  };\n\n  return (\n    <Page\n      header={\n        <Header\n          onOpen={() => setOpen(true)}\n          answers={answers}\n          guesses={guesses}\n        />\n      }\n      content={\n        <Content answers={answers} guesses={guesses} onSubmit={handleSubmit} />\n      }\n      drawer={\n        <Drawer\n          open={open}\n          onClose={() => setOpen(false)}\n          onOpen={() => setOpen(true)}\n          answers={answers}\n          guesses={guesses}\n          onReset={handleReset}\n        />\n      }\n    />\n  );\n}\n","import React, { Fragment } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport { AppBar, Toolbar, IconButton } from \"@material-ui/core\";\n\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\n\nimport GrowTypography from \"../GrowTypography\";\n\nexport default function ProverbsHeader({\n  answers,\n  loading,\n  visible = false,\n  onVisibileToggle = () => {}\n}) {\n  const { goBack } = useHistory();\n  return (\n    <Fragment>\n      <AppBar>\n        <Toolbar>\n          <IconButton color=\"inherit\" title=\"Go Back\" onClick={() => goBack()}>\n            <ArrowBackIcon />\n          </IconButton>\n          <GrowTypography variant=\"h6\" color=\"inherit\">\n            {loading ? \"…\" : answers.length} Proverbi\n          </GrowTypography>\n          <IconButton\n            color=\"inherit\"\n            title={visible ? \"Nascondi\" : \"Mostra\"}\n            onClick={onVisibileToggle}\n          >\n            {visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n    </Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Collapse,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography\n} from \"@material-ui/core\";\n\nimport { Skeleton } from \"@material-ui/lab\";\n\nimport BlockIcon from \"@material-ui/icons/Block\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport amber from \"@material-ui/core/colors/amber\";\n\nimport BoxContainer from \"../BoxContainer\";\n\nexport default function ProverbsContent({\n  answers,\n  guesses,\n  loading,\n  visible = false\n}) {\n  const [render, setRender] = useState(10);\n\n  useEffect(() => {\n    if (render < answers.length) {\n      const to = setTimeout(\n        setRender,\n        50,\n        Math.min(answers.length, render + 10)\n      );\n      return () => clearTimeout(to);\n    }\n  }, [render, answers.length]);\n\n  return (\n    <BoxContainer>\n      <Typography gutterBottom>\n        Tutti i testi sono tratti dalla pagina Wikipedia sul dipinto:{\" \"}\n        <a\n          href=\"https://it.wikipedia.org/wiki/Proverbi_fiamminghi\"\n          title=\"Apri Wikipedia\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Proverbi Fiamminghi (Pieter Bruegel il Vecchio)\n        </a>\n      </Typography>\n      <Grid container alignItems=\"center\" justify=\"space-evenly\" spacing={1}>\n        {loading &&\n          Array(20)\n            .fill(true)\n            .map((_, i) => <SkeletonCard key={i} />)}\n\n        {answers.slice(0, render).map(a => {\n          const guessed = guesses.includes(a.id);\n          return (\n            <AnswerCard\n              key={a.id}\n              answer={a}\n              guessed={guessed}\n              visible={visible || guessed}\n            />\n          );\n        })}\n      </Grid>\n    </BoxContainer>\n  );\n}\n\nconst AnswerCard = ({\n  answer: { id, proverb, meaning, italian },\n  guessed,\n  visible\n}) => {\n  const [suggestion, setSuggestion] = useState(false);\n\n  return (\n    <Grid item xs={12} sm={9} md={6}>\n      <Card variant=\"outlined\">\n        <CardHeader\n          action={\n            !guessed &&\n            !!meaning && (\n              <IconButton\n                title=\"Ottieni un suggerimento\"\n                color=\"inherit\"\n                onClick={() => setSuggestion(!suggestion)}\n              >\n                <SearchIcon />\n              </IconButton>\n            )\n          }\n          avatar={\n            guessed ? (\n              <DoneIcon color=\"primary\" />\n            ) : (\n              <BlockIcon style={{ color: amber[500] }} />\n            )\n          }\n          title={`#${id}`}\n        />\n        <CardContent>\n          <Collapse in={visible}>\n            <Typography variant=\"h6\">{proverb}</Typography>\n            <Typography color=\"textSecondary\">{italian}</Typography>\n          </Collapse>\n          <Collapse in={suggestion || guessed}>\n            <List>\n              <ListItem>\n                <ListItemIcon>\n                  <SearchIcon />\n                </ListItemIcon>\n                <ListItemText primary={meaning} />\n              </ListItem>\n            </List>\n          </Collapse>\n        </CardContent>\n      </Card>{\" \"}\n    </Grid>\n  );\n};\n\nconst SkeletonCard = () => (\n  <Grid item xs={12} sm={9} md={6}>\n    <Card variant=\"outlined\">\n      <CardHeader\n        avatar={<Skeleton variant=\"circle\" width={24} height={24} />}\n        title={<Skeleton variant=\"text\" />}\n      />\n      <CardContent>\n        <Typography variant=\"h6\">\n          <Skeleton variant=\"text\" />\n        </Typography>\n        <Typography color=\"textSecondary\">\n          <Skeleton variant=\"text\" />\n        </Typography>\n        <List>\n          <ListItem>\n            <ListItemIcon>\n              <Skeleton variant=\"circle\" width={24} height={24} />\n            </ListItemIcon>\n            <ListItemText primary={<Skeleton variant=\"text\" />} />\n          </ListItem>\n        </List>\n      </CardContent>\n    </Card>\n  </Grid>\n);\n","import React, { useEffect, useState } from \"react\";\n\nimport { useSnackbar } from \"notistack\";\n\nimport Page from \"../Page\";\nimport Header from \"./Header\";\nimport Content from \"./Content\";\n\nimport { get as getGuesses } from \"../actions/guesses\";\nimport { load as loadAnswers } from \"../actions/answers\";\n\nexport default function ProverbsView() {\n  const [answers, setAnswers] = useState([]);\n  const [guesses, setGuesses] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const { enqueueSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    loadAnswers()\n      .then(answers => setAnswers(answers))\n      .catch(err => {\n        console.error(err);\n        enqueueSnackbar(err.message, { variant: \"error\" });\n      })\n      .then(() => setLoading(false));\n  }, [enqueueSnackbar]);\n\n  useEffect(() => {\n    setGuesses(getGuesses());\n  }, []);\n\n  const handleVisibileToggle = () => setVisible(!visible);\n\n  return (\n    <Page\n      header={\n        <Header\n          answers={answers}\n          guesses={guesses}\n          loading={loading}\n          visible={visible}\n          onVisibileToggle={handleVisibileToggle}\n        />\n      }\n      content={\n        <Content\n          answers={answers}\n          guesses={guesses}\n          loading={loading}\n          visible={visible}\n        />\n      }\n    />\n  );\n}\n","import React from \"react\";\n\nimport {\n  // See https://reacttraining.com/react-router/web/guides/quick-start for details\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\nimport Home from \"./home/Router\";\nimport Proverbs from \"./proverbs/Router\";\n\nconst ROUTES = [\n  // {path: '', component: RouterComponent, [exact]}\n  { path: \"/home\", component: Home },\n  { path: \"/proverbs\", component: Proverbs }\n];\n\nexport default function(props) {\n  return (\n    <Router basename=\"/bruegel\">\n      <Switch>\n        {ROUTES.map((route, i) => (\n          <Route key={i} {...route} />\n        ))}\n        <Redirect to=\"/home\" />\n      </Switch>\n    </Router>\n  );\n}\n","import React from \"react\";\n\nimport { Route, Switch } from \"react-router-dom\";\n\nimport View from \"./View\";\n\nexport default function HomeRouter() {\n  return (\n    <Switch>\n      <Route path=\"/home\" component={View} />\n    </Switch>\n  );\n}\n","import React from \"react\";\n\nimport { Route, Switch } from \"react-router-dom\";\n\nimport View from \"./View\";\n\nexport default function ProverbsRouter() {\n  return (\n    <Switch>\n      <Route path=\"/proverbs\" component={View} />\n    </Switch>\n  );\n}\n","import React from \"react\";\n\nimport ErrorWrapper from \"./components/ErrorWrapper\";\nimport ThemeWrapper from \"./components/ThemeWrapper\";\nimport NotifyWrapper from \"./components/NotifyWrapper\";\n\nimport Router from \"./components/Router\";\n\nexport default function App() {\n  return (\n    <ThemeWrapper>\n      <ErrorWrapper>\n        <NotifyWrapper>\n          <Router />\n        </NotifyWrapper>\n      </ErrorWrapper>\n    </ThemeWrapper>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}